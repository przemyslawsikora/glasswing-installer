---
- name: Pull Kafka image
  docker_image:
    name: confluentinc/cp-kafka
    tag: 5.1.0

- name: Create Kafka container
  docker_container:
    name: kafka
    image: confluentinc/cp-kafka:5.1.0
    restart_policy: always
    network_mode: "{{ docker_network_name }}"
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - kafka
    hostname: kafka
    published_ports:
      - 9092:9092
      - 9099:9099
    env:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://{{ ip_address }}:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9099
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote \
        -Dcom.sun.management.jmxremote.authenticate=false \
        -Dcom.sun.management.jmxremote.ssl=false \
        -Djava.rmi.server.hostname=kafka \
        -Dcom.sun.management.jmxremote.port=9099 \
        -Dcom.sun.management.jmxremote.rmi.port=9099 \
        -Dcom.sun.management.jmxremote.local.only=false"

- name: Pull Kafka REST Proxy image
  docker_image:
    name: confluentinc/cp-kafka-rest
    tag: 5.1.0

- name: Create Kafka REST Proxy container
  docker_container:
    name: kafka-rest
    image: confluentinc/cp-kafka-rest:5.1.0
    restart_policy: always
    network_mode: "{{ docker_network_name }}"
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - kafkarest
    hostname: kafkarest
    published_ports:
      - 8082:8082
    env:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_REST_HOST_NAME: kafkarest
      KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS: GET,POST,PUT,DELETE,OPTIONS
      KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN: "*"

- name: Pull Kafka manager image
  docker_image:
    name: sheepkiller/kafka-manager
    tag: latest

- name: Create Kafka manager container
  docker_container:
    name: kafka-manager
    image: sheepkiller/kafka-manager:latest
    restart_policy: always
    network_mode: "{{ docker_network_name }}"
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - kafkamanager
    hostname: kafkamanager
    published_ports:
      - 127.0.0.1:9000:9000
    env:
      ZK_HOSTS: zookeeper:2181

- name: Create Kafka topic 'measurements'
  docker_container:
    name: kafka-topic-measurements
    image: confluentinc/cp-kafka:5.1.0
    auto_remove: yes
    network_mode: "{{ docker_network_name }}"
    networks:
      - name: "{{ docker_network_name }}"
    command:
      - kafka-topics
      - --create
      - --topic measurements
      - --partitions 1
      - --replication-factor 1
      - --if-not-exists
      - --zookeeper zookeeper:2181
